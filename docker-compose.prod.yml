version: '3.8'

# 生产环境配置文件
# 使用方法: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  # MongoDB生产环境配置
  mongodb:
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password123}
    volumes:
      - mongodb_data:/data/db
      - ./logs/mongodb:/var/log/mongodb
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # 后端生产环境配置
  backend:
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-password123}@mongodb:27017/whateat?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key}
      - LOG_LEVEL=info
    volumes:
      - ./server/uploads:/app/uploads
      - ./logs/backend:/app/logs
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # 前端生产环境配置
  frontend:
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Nginx生产环境配置
  nginx:
    restart: always
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "443:443"
      - "80:80"
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/mongodb

networks:
  eatwhat-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: eatwhat-br0 